apiVersion: apps/v1
kind: Deployment
metadata:
  name: {your-project-name}
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-{your-project-name}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-{your-project-name}
    spec:
      containers:
        - image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: {your-project-name}
          ports:
            - containerPort: 5000
              name: port
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: pipeline-docker-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
#---
#apiVersion: v1
#kind: Service
#metadata:
#  annotations:
#    field.cattle.io/targetWorkloadIds: '["deployment:default:{your-project-name}"]'
#    workload.cattle.io/targetWorkloadIdNoop: "true"
#    workload.cattle.io/workloadPortBased: "true"
#  labels:
#    cattle.io/creator: norman
#  name: {your-project-name}
#  namespace: default
#  ownerReferences:
#    - apiVersion: apps/v1beta2
#      controller: true
#      kind: deployment
#      name: {your-project-name}
#  selfLink: /api/v1/namespaces/default/services/{your-project-name}
#spec:
#  ports:
#    - name: {your-project-name}
#      port: 5000
#      protocol: TCP
#      targetPort: 5000
#  selector:
#    workload.user.cattle.io/workloadselector: deployment-default-{your-project-name}
#  sessionAffinity: None
#  type: ClusterIP
#---
#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    cattle.io/creator: norman
#  name: {your-project-name}-nodeport
#  namespace: default
#  ownerReferences:
#    - apiVersion: apps/v1beta2
#      controller: true
#      kind: deployment
#      name: {your-project-name}
#  selfLink: /api/v1/namespaces/default/services/{your-project-name}-nodeport
#spec:
#  externalTrafficPolicy: Cluster
#  ports:
#    - name: port
#      nodePort: 30501
#      port: 5000
#      protocol: TCP
#      targetPort: 5000
#  selector:
#    workload.user.cattle.io/workloadselector: deployment-default-{your-project-name}
#  sessionAffinity: None
#  type: NodePort
#status:
#  loadBalancer: {}
